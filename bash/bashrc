# vim: ft=sh

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}"/bash
HISTFILE="${XDG_CACHE_HOME:-$HOME/.cache}"/bash/history

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=10000
# append to the history file, don't overwrite it
shopt -s histappend

export XDG_CONFIG_HOME="${HOME}/.config"

export EDITOR=nvim
export VISUAL=nvim
export PIP_REQUIRE_VIRTUALENV=true

# source aliases
if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# source cargo environment
if [ -f $HOME/.cargo/env ]; then
  export BINSTALL_DISABLE_TELEMETRY=true
  . $HOME/.cargo/env
fi

# add local bin as front of path
if [ -d "$HOME/.local/bin" ] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Optional utility section
# ------------------------

{{#if (is_executable "vivid")}}
export LS_COLORS="$(vivid generate catppuccin-frappe)"
{{/if}}

{{#if (is_executable "bat")}}
# Use `bat` as a manpager
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
{{/if}}

{{#if (is_executable "zoxide")}}
eval "$(zoxide init --cmd cd bash)"
{{/if}}

{{#if (is_executable "yazi")}}
{{#if (eq dotter.os "windows")}}
export YAZI_FILE_ONE=/usr/bin/file.exe
{{/if}}
export YAZI_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/yazi"
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
{{/if}}

{{#if (and (is_executable "fzf") (is_executable "fd") (is_executable "rg"))}}
eval "$(fzf --bash)"
export FZF_CTRL_T_OPTS="--preview 'bat --color=always --style=plain --line-range :300 {}' --preview-window right,60%,border-vertical"
export FZF_DEFAULT_COMMAND="fd --type f --strip-cwd-prefix --hidden --exclude .git"
FZF_MOVEMENT="--bind='alt-]:preview-page-down' \
              --bind='alt-[:preview-page-up' \
              --bind='alt-p:toggle-preview'"
# Catppuccin colors
FZF_COLORS=" \
--color=bg+:#414559,spinner:#f2d5cf,hl:#a6d189 \
--color=fg:#c6d0f5,header:#e78284,info:#85c1dc,pointer:#ef9f76 \
--color=marker:#babbf1,fg+:#c6d0f5,prompt:#ef9f76,hl+:#e78284 \
--color=selected-bg:#51576d"
export FZF_DEFAULT_OPTS="$FZF_MOVEMENT $FZF_COLORS --height=50% --info=inline --border=rounded --cycle --multi"

export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

export RIPGREP_CONFIG_PATH="${HOME}/.config/ripgrep.rc"
{{/if}}

{{#if (is_executable "starship")}}
# Prompt setup
eval -- "$(starship init bash --print-full-init)"
{{/if}}

{{#if (is_executable "gh")}}
# github-cli completions
eval "$(gh completion -s bash)"
{{/if}}
